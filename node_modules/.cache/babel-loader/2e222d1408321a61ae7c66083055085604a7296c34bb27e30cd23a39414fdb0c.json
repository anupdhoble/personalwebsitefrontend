{"ast":null,"code":"var _jsxFileName = \"D:\\\\GithubRepo\\\\personalwebsite\\\\Frontend\\\\src\\\\components\\\\CreateBlog.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport BlogController from \"./BlogController\";\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport { auth, db } from '../firebaseConfig';\nimport { useNavigate } from \"react-router-dom\";\nimport '../styles/bloglogin.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateBlog({\n  isLogin\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [blogContent, setBlogContent] = useState(\"\");\n  const postsCollectionRef = collection(db, \"blogs\");\n  const navigate = useNavigate();\n  const createPost = async () => {\n    if (title !== \"\" && blogContent !== \"\") {\n      try {\n        // Get IP address\n        const ipAddressResponse = await fetch('https://api.ipify.org?format=json');\n        const ipAddressData = await ipAddressResponse.json();\n        const ipAddress = ipAddressData.ip;\n\n        // Get device information\n        const userAgent = window.navigator.userAgent;\n        const currentDate = new Date();\n        const formatDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n        await addDoc(postsCollectionRef, {\n          title,\n          blogContent,\n          uploadDate: formatDate,\n          uploadTime: serverTimestamp(),\n          author: {\n            name: auth.currentUser.displayName,\n            id: auth.currentUser.uid\n          },\n          ipAddress,\n          userAgent\n        });\n\n        // Show a success message to the user\n        toast.success(\"Post created successfully\");\n        setTitle(\"\");\n        setBlogContent(\"\");\n\n        // Navigate after success\n        navigate('/blogs');\n      } catch (error) {\n        setTitle(\"\");\n        setBlogContent(\"\");\n        console.error(\"Error creating post:\", error);\n        toast.error(\"An error occurred while creating post\");\n      }\n    } else {\n      toast.error(\"Title or Content can't be empty\");\n    }\n  };\n  useEffect(() => {\n    if (!isLogin) {\n      navigate(\"/blogs/login\");\n      toast.warning(\"Login to create Blog\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer-fix\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BlogController, {\n      isLogin: isLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createPostPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cpContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create a Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputGp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Article Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Title..\",\n            value: title,\n            onChange: event => {\n              setTitle(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputGp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Start writing...\",\n            value: blogContent,\n            id: \"\",\n            cols: \"30\",\n            rows: \"10\",\n            onChange: event => {\n              setBlogContent(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createPost,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateBlog, \"CaqIMmi2FXoueaFIkM3O3iQHb7g=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateBlog;\n;\nvar _c;\n$RefreshReg$(_c, \"CreateBlog\");","map":{"version":3,"names":["useEffect","useState","BlogController","addDoc","collection","serverTimestamp","auth","db","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","CreateBlog","isLogin","_s","title","setTitle","blogContent","setBlogContent","postsCollectionRef","navigate","createPost","ipAddressResponse","fetch","ipAddressData","json","ipAddress","ip","userAgent","window","navigator","currentDate","Date","formatDate","getDate","getMonth","getFullYear","uploadDate","uploadTime","author","name","currentUser","displayName","id","uid","success","error","console","warning","className","children","position","autoClose","hideProgressBar","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","event","target","cols","rows","onClick","_c","$RefreshReg$"],"sources":["D:/GithubRepo/personalwebsite/Frontend/src/components/CreateBlog.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport BlogController from \"./BlogController\";\r\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\r\nimport { auth, db } from '../firebaseConfig';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../styles/bloglogin.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport default function CreateBlog({ isLogin }) {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [blogContent, setBlogContent] = useState(\"\");\r\n    const postsCollectionRef = collection(db, \"blogs\");\r\n    const navigate = useNavigate();\r\n    const createPost = async () => {\r\n        if (title !== \"\" && blogContent !== \"\") {\r\n            try {\r\n\r\n                // Get IP address\r\n                const ipAddressResponse = await fetch('https://api.ipify.org?format=json');\r\n                const ipAddressData = await ipAddressResponse.json();\r\n                const ipAddress = ipAddressData.ip;\r\n\r\n                // Get device information\r\n                const userAgent = window.navigator.userAgent;\r\n\r\n                const currentDate = new Date();\r\n                const formatDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\r\n                await addDoc(postsCollectionRef, {\r\n                    title,\r\n                    blogContent,\r\n                    uploadDate: formatDate,\r\n                    uploadTime: serverTimestamp(),\r\n                    author: {\r\n                        name: auth.currentUser.displayName,\r\n                        id: auth.currentUser.uid\r\n                    },\r\n                    ipAddress,\r\n                    userAgent\r\n                });\r\n\r\n                // Show a success message to the user\r\n                toast.success(\"Post created successfully\");\r\n\r\n                setTitle(\"\");\r\n                setBlogContent(\"\");\r\n\r\n                // Navigate after success\r\n                navigate('/blogs');\r\n            } catch (error) {\r\n                setTitle(\"\");\r\n                setBlogContent(\"\");\r\n\r\n                console.error(\"Error creating post:\", error);\r\n                toast.error(\"An error occurred while creating post\");\r\n            }\r\n        }\r\n        else {\r\n            toast.error(\"Title or Content can't be empty\")\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLogin) {\r\n            navigate(\"/blogs/login\");\r\n            toast.warning(\"Login to create Blog\");\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"footer-fix\">\r\n            <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} />\r\n            <BlogController isLogin={isLogin} />\r\n            <div className=\"createPostPage\">\r\n                <div className=\"cpContainer\">\r\n                    <h1>Create a Blog</h1>\r\n                    <div className=\"inputGp\">\r\n                        <label >Article Title:</label>\r\n                        <input placeholder=\"Title..\" value={title} onChange={(event) => {\r\n                            setTitle(event.target.value);\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"inputGp\">\r\n                        <label>Content:</label>\r\n                        <textarea placeholder=\"Start writing...\" value={blogContent} id=\"\" cols=\"30\" rows=\"10\" onChange={(event) => {\r\n                            setBlogContent(event.target.value);\r\n                        }}></textarea>\r\n                    </div>\r\n                    <button onClick={createPost}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}